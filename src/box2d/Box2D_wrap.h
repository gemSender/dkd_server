/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: Box2D.i

#ifndef SWIG_Box2D_WRAP_H_
#define SWIG_Box2D_WRAP_H_

class Swig_memory;

class SwigDirector_b2ContactListener : public b2ContactListener
{
 public:
  SwigDirector_b2ContactListener(int swig_p);
  virtual ~SwigDirector_b2ContactListener();
  void _swig_upcall_BeginContact(b2Contact *contact) {
    b2ContactListener::BeginContact(contact);
  }
  virtual void BeginContact(b2Contact *contact);
  void _swig_upcall_EndContact(b2Contact *contact) {
    b2ContactListener::EndContact(contact);
  }
  virtual void EndContact(b2Contact *contact);
  void _swig_upcall_PreSolve(b2Contact *contact, b2Manifold const *oldManifold) {
    b2ContactListener::PreSolve(contact,oldManifold);
  }
  virtual void PreSolve(b2Contact *contact, b2Manifold const *oldManifold);
  void _swig_upcall_PostSolve(b2Contact *contact, b2ContactImpulse const *impulse) {
    b2ContactListener::PostSolve(contact,impulse);
  }
  virtual void PostSolve(b2Contact *contact, b2ContactImpulse const *impulse);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

#endif
