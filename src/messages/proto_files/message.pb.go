// Code generated by protoc-gen-go.
// source: proto_files/message.proto
// DO NOT EDIT!

/*
Package messages is a generated protocol buffer package.

It is generated from these files:
	proto_files/message.proto

It has these top-level messages:
	GemMessage
	Login
	MoveTo
	PlayerMoveTo
	PlayerLogin
	GenReplyMsg
*/
package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type GemMessage struct {
	Type             *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Data             []byte  `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GemMessage) Reset()                    { *m = GemMessage{} }
func (m *GemMessage) String() string            { return proto.CompactTextString(m) }
func (*GemMessage) ProtoMessage()               {}
func (*GemMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GemMessage) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *GemMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Login struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Login) Reset()                    { *m = Login{} }
func (m *Login) String() string            { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()               {}
func (*Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Login) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type MoveTo struct {
	X                *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MoveTo) Reset()                    { *m = MoveTo{} }
func (m *MoveTo) String() string            { return proto.CompactTextString(m) }
func (*MoveTo) ProtoMessage()               {}
func (*MoveTo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MoveTo) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *MoveTo) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type PlayerMoveTo struct {
	Id               *string  `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	X                *float32 `protobuf:"fixed32,2,req,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,3,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PlayerMoveTo) Reset()                    { *m = PlayerMoveTo{} }
func (m *PlayerMoveTo) String() string            { return proto.CompactTextString(m) }
func (*PlayerMoveTo) ProtoMessage()               {}
func (*PlayerMoveTo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PlayerMoveTo) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *PlayerMoveTo) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *PlayerMoveTo) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type PlayerLogin struct {
	Id               *string  `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	X                *float32 `protobuf:"fixed32,2,req,name=x" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,3,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PlayerLogin) Reset()                    { *m = PlayerLogin{} }
func (m *PlayerLogin) String() string            { return proto.CompactTextString(m) }
func (*PlayerLogin) ProtoMessage()               {}
func (*PlayerLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PlayerLogin) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *PlayerLogin) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *PlayerLogin) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type GenReplyMsg struct {
	Type             *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	IsReply          *bool   `protobuf:"varint,2,req,name=isReply" json:"isReply,omitempty"`
	Data             []byte  `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GenReplyMsg) Reset()                    { *m = GenReplyMsg{} }
func (m *GenReplyMsg) String() string            { return proto.CompactTextString(m) }
func (*GenReplyMsg) ProtoMessage()               {}
func (*GenReplyMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GenReplyMsg) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *GenReplyMsg) GetIsReply() bool {
	if m != nil && m.IsReply != nil {
		return *m.IsReply
	}
	return false
}

func (m *GenReplyMsg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GemMessage)(nil), "messages.GemMessage")
	proto.RegisterType((*Login)(nil), "messages.Login")
	proto.RegisterType((*MoveTo)(nil), "messages.MoveTo")
	proto.RegisterType((*PlayerMoveTo)(nil), "messages.PlayerMoveTo")
	proto.RegisterType((*PlayerLogin)(nil), "messages.PlayerLogin")
	proto.RegisterType((*GenReplyMsg)(nil), "messages.GenReplyMsg")
}

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0x8f, 0x4f, 0xcb, 0xcc, 0x49, 0x2d, 0xd6, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5,
	0x03, 0x8b, 0x09, 0x71, 0x40, 0xb9, 0xc5, 0x4a, 0x26, 0x5c, 0x5c, 0xee, 0xa9, 0xb9, 0xbe, 0x10,
	0xae, 0x90, 0x10, 0x17, 0x4b, 0x49, 0x65, 0x41, 0xaa, 0x04, 0xa3, 0x02, 0x93, 0x06, 0x67, 0x10,
	0x98, 0x0d, 0x12, 0x4b, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x02, 0x8a, 0xf1, 0x04, 0x81, 0xd9, 0x4a,
	0xe2, 0x5c, 0xac, 0x3e, 0xf9, 0xe9, 0x99, 0x79, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x50, 0xe5,
	0x40, 0x96, 0x92, 0x0a, 0x17, 0x9b, 0x6f, 0x7e, 0x59, 0x6a, 0x48, 0xbe, 0x10, 0x0f, 0x17, 0x63,
	0x05, 0x58, 0x82, 0x29, 0x88, 0xb1, 0x02, 0xc4, 0xab, 0x04, 0x9b, 0x00, 0xe4, 0x55, 0x2a, 0x59,
	0x71, 0xf1, 0x04, 0xe4, 0x24, 0x56, 0xa6, 0x16, 0x41, 0xd5, 0xa2, 0x99, 0x02, 0xd1, 0xcb, 0x84,
	0xa2, 0x97, 0x19, 0xa6, 0xd7, 0x92, 0x8b, 0x1b, 0xa2, 0x17, 0xab, 0x03, 0xf0, 0x6a, 0xf5, 0xe7,
	0xe2, 0x76, 0x4f, 0xcd, 0x0b, 0x4a, 0x2d, 0xc8, 0xa9, 0xf4, 0x2d, 0x4e, 0xc7, 0xea, 0x59, 0x09,
	0x2e, 0xf6, 0xcc, 0x62, 0xb0, 0x0a, 0xb0, 0x21, 0x1c, 0x41, 0x30, 0x2e, 0x3c, 0x18, 0x98, 0x11,
	0xc1, 0x00, 0x08, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x67, 0xf4, 0x89, 0x62, 0x01, 0x00, 0x00,
}
